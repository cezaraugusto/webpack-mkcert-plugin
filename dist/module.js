"use strict";var ee=Object.create;var v=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var re=Object.getOwnPropertyNames;var ne=Object.getPrototypeOf,oe=Object.prototype.hasOwnProperty;var se=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),ie=(t,e)=>{for(var r in e)v(t,r,{get:e[r],enumerable:!0})},_=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of re(e))!oe.call(t,s)&&s!==r&&v(t,s,{get:()=>e[s],enumerable:!(o=te(e,s))||o.enumerable});return t};var u=(t,e,r)=>(r=t!=null?ee(ne(t)):{},_(e||!t||!t.__esModule?v(r,"default",{value:t,enumerable:!0}):r,t)),ae=t=>_(v({},"__esModule",{value:!0}),t);var W=se((xe,ce)=>{ce.exports={license:"MIT",repository:{type:"git",url:"https://github.com/cezaraugusto/webpack-mkcert-plugin.git"},engines:{node:">=18"},name:"webpack-mkcert-plugin",version:"0.1.0",description:"Use certificates for webpack that are trusted by your local machine, avoiding browser security warnings during development.",main:"./dist/module.js",types:"./dist/module.d.ts",files:["dist"],author:{name:"Cezar Augusto",email:"boss@cezaraugusto.net",url:"https://cezaraugusto.com"},scripts:{clean:"rm -rf dist",watch:"yarn compile --watch",compile:"tsup-node ./module.ts --format cjs --dts --target=node18 --minify",lint:'eslint "./**/*.ts*"',test:"jest"},keywords:["webpack","plugin","mkcert","cert","certificate","https"],peerDependencies:{webpack:"^5.0.0"},dependencies:{"@colors/colors":"^1.6.0","semver-compare":"^1.0.0"},devDependencies:{"@types/jest":"^29.5.12","@types/node":"^18.11.9","@types/semver-compare":"^1.0.1",eslint:"^8.56.0","eslint-config-extension-create":"*",jest:"^29.7.0","ts-jest":"^29.1.2","ts-loader":"^9.5.1",tsconfig:"*",tsup:"^8.0.1",webpack:"~5.89.0","webpack-cli":"^5.1.4"}}});var we={};ie(we,{default:()=>b});module.exports=ae(we);var h=u(require("fs")),$=u(require("path"));var Q=u(require("os")),c=u(require("fs")),d=u(require("path")),B=require("child_process"),Z=u(require("semver-compare"));var Y=u(require("https"));var A=u(require("path")),n=require("@colors/colors/safe");function R(t,e,r){return`Files "${(0,n.bold)(t)}" and "${(0,n.bold)(e)}" found in ${(0,n.underline)(r)}. Proceeding...`}function I(t,e,r){return`Success! ${(0,n.bold)("cert")} and ${(0,n.bold)("key")} files successfuly created:
\u251C\u2500 ${(0,n.underline)(A.default.join(t.startsWith("/")?"":r,t))}
\u2514\u2500 ${(0,n.underline)(A.default.join(e.startsWith("/")?"":r,e))}
`}function M(){return`Starting ${(0,n.bold)((0,n.bold)("mkcert"))} download...`}function F(){return`Can't get download information for ${(0,n.bold)((0,n.bold)("mkcert"))}. Skipping init step...`}function T(){return`${(0,n.italic)("autoUpgrade")} option is enabled. Upgrading ${(0,n.bold)((0,n.bold)("mkcert"))}...`}function O(){return`Could not get download information of ${(0,n.bold)((0,n.bold)("mkcert"))}. Skipping update step...`}function H(t){return`${(0,n.bold)((0,n.bold)("mkcert"))} is up-to-date @ v${(0,n.bold)(t)}.`}function L(){return`Could not get remote ${(0,n.bold)((0,n.bold)("mkcert"))} information. Ensure you are connected to the internet and try again.`}function P(){return`${(0,n.italic)("force")} option is enabled. Regenerating certificate...`}function j(){return`Could not get current version. ${(0,n.bold)((0,n.bold)("mkcert"))} does not exist.`}function q(t){return`Could not generate certificate for ${t}. ${(0,n.bold)((0,n.bold)("mkcert"))} does not exist.`}function G(t){return`Running ${(0,n.bold)((0,n.bold)("mkcert"))}@${(0,n.bold)(t)}...`}function N(t,e){return`Too many redirects (${(0,n.bold)(t.toString())}). Last URL: ${(0,n.underline)(e)}.`}function V(t){return`on(data): ${t}`}function J(t){return`Downloading the ${(0,n.bold)((0,n.bold)("mkcert"))} binary from ${(0,n.underline)(t)}...`}function z(t){return`Download successful. ${(0,n.bold)((0,n.bold)("mkcert"))} binary saved to ${(0,n.underline)(t)}`}var K=5;async function l({url:t,headers:e,responseType:r,redirectAttempts:o=0}){let s=W();return await new Promise((i,a)=>{let x=[],f=Y.default.get(t,{headers:{"User-Agent":`webpack-mkcert-plugin/v${s.version}`,Accept:"application/json, text/plain, */*",...e},timeout:1e4},p=>{let{headers:C,statusCode:E}=p;if(E&&C.location&&E>=300&&E<=399){if(o>=K){a(new Error(N(K,t)));return}l({url:C.location,headers:e,responseType:r,redirectAttempts:o+1}).then(i).catch(a);return}p.on("data",m=>{x.push(m),t.includes("/download/")&&V(m)}),p.on("end",()=>{let m=Buffer.concat(x);switch(r){case"json":try{let U=JSON.parse(m.toString());i(U)}catch(U){a(new Error(`Failed to parse JSON response: ${U.message}`))}break;case"arrayBuffer":i(m);break;default:a(new Error(`Unsupported response type: ${r}`))}}),p.on("error",m=>{a(new Error(`Request failed: ${m.message}`))})});f.on("timeout",()=>{f.destroy(),a(new Error("Request timed out"))}),f.on("error",p=>{a(new Error(`Request failed: ${p.message}`))})})}function ue(){switch(process.platform){case"win32":return"windows-amd64.exe";case"linux":return process.arch==="arm64"?"linux-arm64":process.arch==="arm"?"linux-arm":"linux-amd64";case"darwin":return"darwin-amd64";default:throw new Error("Unsupported platform")}}async function S(){let e=await l({url:"https://api.github.com/repos/FiloSottile/mkcert/releases/latest",headers:{Accept:"application/vnd.github+json"},responseType:"json"}),o=e.assets.find(({name:i})=>i.includes(ue()))?.browser_download_url,s=e.tag_name;if(!(o&&s)){console.error(L());return}return{downloadUrl:o,version:s}}var y=u(require("fs")),X=u(require("path"));async function D(t,e){console.log(J(t));let r=await l({url:t,headers:{},responseType:"arrayBuffer"}),o=X.default.dirname(e);y.default.existsSync(o)||y.default.mkdirSync(o,{recursive:!0}),y.default.writeFileSync(e,r),y.default.chmodSync(e,511),console.log(z(e))}var pe=process.platform==="win32"?"mkcert.exe":"mkcert",k=d.default.resolve(__dirname,pe);function de(){let t=Q.default.networkInterfaces(),e=[];for(let r in t){let o=t[r];if(o)for(let s of o)s.family==="IPv4"&&e.push(s.address)}return["localhost",...e]}var w=class{options;constructor(e){this.options=e}getBinary(){return c.default.existsSync(k)?k:void 0}getBinaryVersion(){let e=this.getBinary();if(!e)return console.error(j()),null;let{stdout:r}=(0,B.exec)(`"${e}" --version`,{env:{...process.env,JAVA_HOME:void 0}});return r?.toString().trim()}async downloadBinary(){M();let e=await S();if(!e||!e?.downloadUrl){console.error(F());return}await D(e?.downloadUrl,k)}async upgradeMkcertBinary(){console.log(T());let e=await S();if(!e){console.error(O());return}let r=this.getBinaryVersion(),o=e.version.replace(/^v\.?/,"")||"0",s=r?.replace(/^v\.?/,"")||"0",i=(0,Z.default)(o,s)>0;!r||i?await D(e.downloadUrl,k):console.log(H(s))}async runBinary(e){if(!c.default.existsSync(k))await this.downloadBinary();else if(this.options.autoUpgrade)await this.upgradeMkcertBinary();else{let i=this.getBinaryVersion()||"unknown";console.log(G(i))}let r=de();return[...new Set([...r,...e])].filter(i=>!!i)}createCertificate(e,r,o){let s=e.join(" "),i=this.getBinary();i||(console.log(q(s)),process.exit(1)),c.default.existsSync(d.default.dirname(r))||c.default.mkdirSync(d.default.dirname(o)),c.default.existsSync(d.default.dirname(o))||c.default.mkdirSync(d.default.dirname(o));let a=`"${i}" -install -key-file "${r}" -cert-file "${o}" ${s}`;(0,B.exec)(a,{env:{...process.env,JAVA_HOME:void 0}})}async installCertificate(e){c.default.existsSync(this.options.outputDir)||c.default.mkdirSync(this.options.outputDir,{recursive:!0});let r=d.default.resolve(this.options.outputDir,this.options.key),o=d.default.resolve(this.options.outputDir,this.options.cert);if(this.options.force||!(c.default.existsSync(o)&&c.default.existsSync(r))){let s=await this.runBinary(e);console.log(P()),this.createCertificate(s,r,o)}}};var me=$.default.resolve(__dirname,"certs"),le=["localhost"],fe="dev.key",ge="dev.cert",ye=!1,ke=!1,b=class{options;constructor(e={}){this.options={hosts:e.hosts||le,key:e.key||fe,cert:e.cert||ge,outputDir:e.outputDir||me,autoUpgrade:e.autoUpgrade||ye,force:e.force||ke}}async ensureCertificates(){let{force:e,key:r,cert:o,hosts:s,outputDir:i}=this.options,a=$.default.join(i,o),x=$.default.join(i,r),f=h.default.existsSync(a)&&h.default.existsSync(x);if(h.default.existsSync(i)||h.default.mkdirSync(i,{recursive:!0}),!e&&f){console.log(R(o,r,i));return}try{await new w(this.options).installCertificate(s||[]),console.log(I(o.toString(),r.toString(),i))}catch(p){console.error(p)}}apply(e){e.hooks.beforeRun.tapPromise("MkcertWebpackPlugin",async()=>{try{await this.ensureCertificates()}catch(r){console.error(r)}})}};
